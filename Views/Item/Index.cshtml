@using WebInventoryManagement.Models.Data;
@{
    ViewData["Title"] = "Items";
}
<body>
    <div class="container mt-3">

        <div class="d-flex justify-content-between align-items-center mb-3">

            <a href="/Item/Create" class="btn btn-primary">Add Item</a>
            <div style="width: 10%;"></div>

            <div>
                <label for="storeComboBox">Select Store:</label>
                <select id="storeComboBox" onchange="filterItems()">
                    <option value="All">All</option>
                    @foreach (var store in ViewBag.StoreList)
                    {
                        <option value="@store.Value">@store.Text</option>
                    }
                </select>
            </div>

            <div>
                <label for="shelfComboBox">Select Shelf:</label>
                <select id="shelfComboBox" onchange="filterItems()">
                    <option value="All">All</option>
                    @foreach (var shelf in ViewBag.ShelfList)
                    {
                        <option value="@shelf.Value.ToLower()">@shelf.Text</option>
                    }
                </select>
            </div>




        </div>

        <input type="text" id="searchBox" placeholder="Search by name..." onkeyup="filterItems()">


        <table class="table">
            <thead>
                <tr>
                    <th>Item Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Description</th>

                    <th>Category</th>
                    <th>Shelf</th>
                    <th>Actions</th>



                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="item-row" data-shelf-id="@item.Shelf.Id" data-store-id="@item.StoreId">
                        <td>@item.ItemName</td>
                        <td>@item.Price</td>
                        <td>@item.Quantity</td>
                        <td>@item.Description</td>
                        <td>@item.Category.CategoryName</td>
                        <td>@item.Shelf?.ShelfName</td>
                        <td>
                            <form asp-controller="Item" asp-action="Edit" asp-route-id="@item.Id" method="post">
                                <button class="btn-primary">Edit</button>
                            </form>
                            <form asp-controller="Item" asp-action="Delete" asp-route-id="@item.Id" method="post" onsubmit="return confirm('Are you sure you want to delete this item?');">
                                <button class="btn-danger">Delete</button>
                            </form>
                        </td>
                    </tr>

                }
            </tbody>



        </table>
    </div>

    <script>
        function filterItems() {
            var selectedStoreId = $('#storeComboBox').val();
            var selectedShelfId = $('#shelfComboBox').val();

            var searchText = $('#searchBox').val().toLowerCase();

            $('.item-row').each(function () {
                var storeId = $(this).data('store-id').toString();
                var shelfId = $(this).data('shelf-id').toString();
                var itemName = $(this).find('td:first').text().toLowerCase();

                var storeMatch = (selectedStoreId === 'All' || storeId === selectedStoreId);
                var shelfMatch = (selectedShelfId ==='All' || shelfId === selectedShelfId);
                var nameMatch = itemName.startsWith(searchText);

                if (shelfMatch && storeMatch && nameMatch) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        }







    </script>

</body>
